{
    "swagger": "2.0",
    "info": {
        "title": "Better - The better backend",
        "contact": {
            "name": "Cyteon"
        },
        "version": "0.0.1"
    },
    "host": "localhost:8080",
    "basePath": "/_/",
    "paths": {
        "/messages": {
            "get": {
                "description": "Fetch every message available.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Get all messages.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Message"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a single message.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Create a message.",
                "parameters": [
                    {
                        "description": "Message to create",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateMessage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateMessageRes"
                        }
                    }
                }
            }
        },
        "/messages/:channel": {
            "get": {
                "description": "Fetch every message in a channel.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Get all messages in a channel.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "channel",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Message"
                        }
                    }
                }
            }
        },
        "/messages/:id": {
            "put": {
                "description": "Update a single message.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Update a message.",
                "parameters": [
                    {
                        "description": "Message update data",
                        "name": "todo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateMessage"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Message ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateMessageRes"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.CreateMessage": {
            "type": "object",
            "properties": {
                "channel": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateMessageRes": {
            "type": "object",
            "properties": {
                "inserted_id": {
                    "type": "string"
                }
            }
        },
        "handlers.UpdateMessage": {
            "type": "object",
            "properties": {
                "channel": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "handlers.UpdateMessageRes": {
            "type": "object",
            "properties": {
                "updated_count": {
                    "type": "integer"
                }
            }
        },
        "models.Message": {
            "type": "object",
            "properties": {
                "channel": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}